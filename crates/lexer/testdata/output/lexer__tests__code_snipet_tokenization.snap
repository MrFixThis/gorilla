---
source: crates/lexer/src/tests.rs
expression: prepare_snapshot(src)
---
include std::fs;
^^^^^^^ Keyword(Include) -> [0 - 0, 0 - 6]
        ^^^ Ident(std) -> [0 - 8, 0 - 10]
           ^^ ColonColon -> [0 - 11, 0 - 12]
              ^ Ident(s) -> [0 - 14, 0 - 14]
               ^ Semicolon -> [0 - 15, 0 - 15]

# version
^^^^^^^^^ Comment(Inline,  version) -> [2 - 0, 2 - 8]
const ver = (0, 1, 0); # SemVer
^^^^^ Keyword(Const) -> [3 - 0, 3 - 4]
      ^^^ Ident(ver) -> [3 - 6, 3 - 8]
          ^ Eq -> [3 - 10, 3 - 10]
            ^ OpenDel(Parenthesis) -> [3 - 12, 3 - 12]
             ^ Literal(Int, 0) -> [3 - 13, 3 - 13]
              ^ Comma -> [3 - 14, 3 - 14]
                ^ Literal(Int, 1) -> [3 - 16, 3 - 16]
                 ^ Comma -> [3 - 17, 3 - 17]
                   ^ Literal(Int, 0) -> [3 - 19, 3 - 19]
                    ^ CloseDel(Parenthesis) -> [3 - 20, 3 - 20]
                     ^ Semicolon -> [3 - 21, 3 - 21]
                       ^^^^^^^^ Comment(Inline,  SemVer) -> [3 - 23, 3 - 30]

# out-file name
^^^^^^^^^^^^^^^ Comment(Inline,  out-file name) -> [5 - 0, 5 - 14]
var my_str = "gorilla.sample";
^^^ Keyword(Var) -> [6 - 0, 6 - 2]
    ^^^^^^ Ident(my_str) -> [6 - 4, 6 - 9]
           ^ Eq -> [6 - 11, 6 - 11]
             ^^^^^^^^^^^^^^^ Literal(Str, "gorilla.sample") -> [6 - 13, 6 - 27]
                             ^ Semicolon -> [6 - 29, 6 - 29]

#*
^^ Comment(Block, 
    Look for the file at the specified path.
) -> [8 - 0, 10 - 1]
    Look for the file at the specified path.
*#
priv func get_file(path) {
^^^^ Keyword(Priv) -> [11 - 0, 11 - 3]
     ^^^^ Keyword(Func) -> [11 - 5, 11 - 8]
          ^^^^^^^^ Ident(get_file) -> [11 - 10, 11 - 17]
                  ^ OpenDel(Parenthesis) -> [11 - 18, 11 - 18]
                   ^^^^ Ident(path) -> [11 - 19, 11 - 22]
                       ^ CloseDel(Parenthesis) -> [11 - 23, 11 - 23]
                         ^ OpenDel(Brace) -> [11 - 25, 11 - 25]
    if file @ fs::read_file_to_str(path) {
    ^^ Keyword(If) -> [12 - 4, 12 - 5]
       ^^^^ Ident(file) -> [12 - 7, 12 - 10]
            ^ At -> [12 - 12, 12 - 12]
              ^^ Ident(fs) -> [12 - 14, 12 - 15]
                ^^ ColonColon -> [12 - 16, 12 - 17]
                   ^^^^^^^^^^^^^^^ Ident(ead_file_to_str) -> [12 - 19, 12 - 33]
                                  ^ OpenDel(Parenthesis) -> [12 - 34, 12 - 34]
                                   ^^^^ Ident(path) -> [12 - 35, 12 - 38]
                                       ^ CloseDel(Parenthesis) -> [12 - 39, 12 - 39]
                                         ^ OpenDel(Brace) -> [12 - 41, 12 - 41]
        return file;
        ^^^^^^ Keyword(Return) -> [13 - 8, 13 - 13]
               ^^^^ Ident(file) -> [13 - 15, 13 - 18]
                   ^ Semicolon -> [13 - 19, 13 - 19]
    }
    ^ CloseDel(Brace) -> [14 - 4, 14 - 4]
    nil
    ^^^ Keyword(Nil) -> [15 - 4, 15 - 6]
}
^ CloseDel(Brace) -> [16 - 0, 16 - 0]

#*
^^ Comment(Block, 
    Shows the contents of a file.
) -> [18 - 0, 20 - 1]
    Shows the contents of a file.
*#
pub show_file() {
^^^ Keyword(Pub) -> [21 - 0, 21 - 2]
    ^^^^^^^^^ Ident(show_file) -> [21 - 4, 21 - 12]
             ^ OpenDel(Parenthesis) -> [21 - 13, 21 - 13]
              ^ CloseDel(Parenthesis) -> [21 - 14, 21 - 14]
                ^ OpenDel(Brace) -> [21 - 16, 21 - 16]
    if file @ get_file() {
    ^^ Keyword(If) -> [22 - 4, 22 - 5]
       ^^^^ Ident(file) -> [22 - 7, 22 - 10]
            ^ At -> [22 - 12, 22 - 12]
              ^^^^^^^^ Ident(get_file) -> [22 - 14, 22 - 21]
                      ^ OpenDel(Parenthesis) -> [22 - 22, 22 - 22]
                       ^ CloseDel(Parenthesis) -> [22 - 23, 22 - 23]
                         ^ OpenDel(Brace) -> [22 - 25, 22 - 25]
        println(file);
        ^^^^^^^ Ident(println) -> [23 - 8, 23 - 14]
               ^ OpenDel(Parenthesis) -> [23 - 15, 23 - 15]
                ^^^^ Ident(file) -> [23 - 16, 23 - 19]
                    ^ CloseDel(Parenthesis) -> [23 - 20, 23 - 20]
                     ^ Semicolon -> [23 - 21, 23 - 21]
    }
    ^ CloseDel(Brace) -> [24 - 4, 24 - 4]
    println("No file found :(");
    ^^^^^^^ Ident(println) -> [25 - 4, 25 - 10]
           ^ OpenDel(Parenthesis) -> [25 - 11, 25 - 11]
            ^^^^^^^^^^^^^^^^^ Literal(Str, "No file found :(") -> [25 - 12, 25 - 28]
                              ^ CloseDel(Parenthesis) -> [25 - 30, 25 - 30]
                               ^ Semicolon -> [25 - 31, 25 - 31]
}
^ CloseDel(Brace) -> [26 - 0, 26 - 0]
^ Eof -> [26 - 0, 26 - 0]
