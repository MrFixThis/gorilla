---
source: crates/lexer/src/tests.rs
expression: prepare_snapshot(src)
---
var my_array = [1, 2, 3, 4, 5];
^^^ Keyword(var) -> [0 - 0, 0 - 2]
    ^^^^^^^^ Ident(my_array) -> [0 - 4, 0 - 11]
             ^ Eq -> [0 - 13, 0 - 13]
               ^ OpenDel(Bracket) -> [0 - 15, 0 - 15]
                ^ Literal(Int, 1) -> [0 - 16, 0 - 16]
                 ^ Comma -> [0 - 17, 0 - 17]
                   ^ Literal(Int, 2) -> [0 - 19, 0 - 19]
                    ^ Comma -> [0 - 20, 0 - 20]
                      ^ Literal(Int, 3) -> [0 - 22, 0 - 22]
                       ^ Comma -> [0 - 23, 0 - 23]
                         ^ Literal(Int, 4) -> [0 - 25, 0 - 25]
                          ^ Comma -> [0 - 26, 0 - 26]
                            ^ Literal(Int, 5) -> [0 - 28, 0 - 28]
                             ^ CloseDel(Bracket) -> [0 - 29, 0 - 29]
                              ^ Semicolon -> [0 - 30, 0 - 30]
var my_tuple = (1, 4, 8);
^^^ Keyword(var) -> [1 - 0, 1 - 2]
    ^^^^^^^^ Ident(my_tuple) -> [1 - 4, 1 - 11]
             ^ Eq -> [1 - 13, 1 - 13]
               ^ OpenDel(Parenthesis) -> [1 - 15, 1 - 15]
                ^ Literal(Int, 1) -> [1 - 16, 1 - 16]
                 ^ Comma -> [1 - 17, 1 - 17]
                   ^ Literal(Int, 4) -> [1 - 19, 1 - 19]
                    ^ Comma -> [1 - 20, 1 - 20]
                      ^ Literal(Int, 8) -> [1 - 22, 1 - 22]
                       ^ CloseDel(Parenthesis) -> [1 - 23, 1 - 23]
                        ^ Semicolon -> [1 - 24, 1 - 24]
var my_map = { "nice": 5, "lang": 10 };
^^^ Keyword(var) -> [2 - 0, 2 - 2]
    ^^^^^^ Ident(my_map) -> [2 - 4, 2 - 9]
           ^ Eq -> [2 - 11, 2 - 11]
             ^ OpenDel(Brace) -> [2 - 13, 2 - 13]
               ^^^^^ Literal(Str, "nice") -> [2 - 15, 2 - 19]
                     ^ Colon -> [2 - 21, 2 - 21]
                       ^ Literal(Int, 5) -> [2 - 23, 2 - 23]
                        ^ Comma -> [2 - 24, 2 - 24]
                          ^^^^^ Literal(Str, "lang") -> [2 - 26, 2 - 30]
                                ^ Colon -> [2 - 32, 2 - 32]
                                  ^^ Literal(Int, 10) -> [2 - 34, 2 - 35]
                                     ^ CloseDel(Brace) -> [2 - 37, 2 - 37]
                                      ^ Semicolon -> [2 - 38, 2 - 38]
^ Eof -> [0 - 0, 0 - 0]

